/*
ID: myucht1
LANG: C++
PROG: ariprog
*/

#include <fstream>
#include <algorithm>
#include <vector>
#include <set>
#include <iostream>
using namespace std;

int main()
{
  ifstream input("ariprog.in");
  ofstream output("ariprog.out");
  int prog_length, bisqr_lim, max_int, max_num;
  bool bisquares[125000] = {false};
  vector<pair<int, int> > solns;

  input >> prog_length >> bisqr_lim;
  for (size_t i = 0; i <= bisqr_lim; ++i)
  {
    for (size_t j = 0; j <= bisqr_lim; ++j)
    {
      bisquares[i * i + j * j] = true;
    }
  }

  max_int = 2 * bisqr_lim * bisqr_lim / (prog_length - 1);
  for (size_t cint = 1; cint <= max_int; ++cint)
  {
    max_num = 2 * bisqr_lim * bisqr_lim - cint * (prog_length - 1) + 1;
    // Check for 5 numbers separated by this amount no more than prog_length^2 - 4i.
    for (size_t cnum = 0; cnum <= max_num; ++cnum)
    {
      bool found = true;
      for (size_t iter = 0; iter < prog_length; ++iter)
      {
        if (!bisquares[cnum + iter * cint])
        {
          found = false;
          break;
        }
      }
      if (found)
        solns.push_back(make_pair(cint, cnum));
    }
  }

  if (solns.size() == 0)
  {
    output << "NONE\n";
    cout << "NONE\n";
  } else
  {
    sort(solns.begin(), solns.end());
    for (size_t sol = 0; sol < solns.size(); ++sol)
    {
      output << solns[sol].second << " " << solns[sol].first << endl;
    }
  }

  return 0;
}
