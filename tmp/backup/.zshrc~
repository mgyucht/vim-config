###################################################
# ~/.zshrc                                        #
# My ZSH config                                   #
###################################################
#
# First, disable the config on noninteractive shells.

[[ ! -o interactive ]] && return;

# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
if [[ ! -o login ]]
then
  ZSH_THEME="bira"
else
  ZSH_THEME="afowler"
fi

# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Comment this out to disable weekly auto-update checks
# DISABLE_AUTO_UPDATE="true"

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
if [[ ! -o login ]]
then
  plugins=(archlinux)
fi

source $ZSH/oh-my-zsh.sh

# Lines configured by zsh-newuser-install
HISTFILE=~/.histfile
HISTSIZE=32767
SAVEHIST=32767
setopt appendhistory autocd extendedglob notify
bindkey -v
# End of lines configured by zsh-newuser-install
# The following lines were added by compinstall
zstyle :compinstall filename '/home/miles/.zshrc'

autoload -Uz compinit
compinit
# End of lines added by compinstall
#
# My own custom config

# Vi-style incremental search
bindkey '^R' history-incremental-search-backward
bindkey '^S' history-incremental-search-forward
bindkey '^P' history-search-backward
bindkey '^N' history-search-forward

# Antigen
source /usr/share/zsh/scripts/antigen/antigen.zsh
# antigen-lib
antigen-bundle zsh-users/zsh-syntax-highlighting
# antigen-bundle zsh-users/zsh-completions
# antigen-bundle archlinux
# antigen-bundle battery
antigen-apply

# fasd
eval "$(fasd --init auto)"

fasd_cache="$HOME/.fasd-init-zsh"
if [ "$(command -v fasd)" -nt "$fasd_cache" -o ! -s "$fasd_cache" ]; then
  fasd --init posix-alias zsh-hook zsh-wcomp zsh-wcomp-install zsh-ccomp zsh-ccomp-install >| "$fasd_cache"
fi
source "$fasd_cache"
unset fasd_cache

# Environment variables

export EDITOR='vim'
export PATH="/usr/local/MATLAB/R2012b/bin:/home/miles/bin/:${PATH}"

# My aliases
alias ls='ls -h --color=always --group-directories-first'
alias dir='dir --color=auto'
alias vdir='vdir --color=auto'
alias grep='grep --color=auto'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'
alias myip='curl -s http://checkrealip.com/ | grep "Current IP Address*"'
alias vim='vim -p'
alias gvim='gvim -p'
alias tree='tree -C'
alias less='less -R'
alias pm-hibernate='/usr/share/laptop-mode-tools/module-helpers/pm-hibernate'
alias du='du -h'
alias df='df -h'
alias startx='startx 1&>/var/log/startx.log 2&>1'
alias xmesg='cat /var/log/startx.log'
alias ...='cd ../..'
alias ....='cd ../../..'
# Don't autocorrect these programs
alias vim='nocorrect vim'
alias sudo='nocorrect sudo'
alias ssh='nocorrect ssh'
alias mpd='nocorrect mpd'
# fasd aliases
alias v='f -e vim'
alias m='f -e mplayer'
alias o='a -e xdg-open'
alias sv='f -e "sudo vim"'

# For home and end to work properly
bindkey "^[[1~" beginning-of-line
bindkey "^[[3~" delete-char
bindkey "^[3;5~" delete-char
bindkey "^[[4~" end-of-line

# NO FUCKING BEEPING
setopt nobeep

# Don't incrementally store history
unsetopt incappendhistory
unsetopt sharehistory

# By default I'm the only user able to read/edit these files
umask 077

# Color
echo "$(dircolors ~/.dircolors)" > ~/.dircolors_temp_$$
source ~/.dircolors_temp_$$
rm ~/.dircolors_temp_$$

# Run commands
#
# Custom cd and lastcd commands
source "/home/miles/bin/sourced/lastcd"
source "/home/miles/bin/sourced/cd"

# Colorize stderr in red. Very useful when looking for errors. Thanks to
# http://gentoo-wiki.com/wiki/Zsh for the basic script and Mikachu in #zsh on
# Freenode (2010-03-07 04:03 CET) for some improvements (-r, printf). It's not
# yet perfect and doesn't work with su and git for example, but it can handle
# most interactive output quite well (even with no trailing new line) and in
# cases it doesn't work, the E alias can be used as workaround.
#
# Moved in the "run commands" section to prevent one unnecessary zsh process
# when starting screen (see above).
# exec 2>>(while read -r -k -u 0 line; do
#     printf '\e[91m%s\e[0m' "$line";
#     print -n $'\0';
# done &)

# Other commands for systemd

if ! systemd-notify --booted; then # not using systemd
  start() {
    sudo rc.d start $1
  }

  restart() {
    sudo rc.d restart $1
  }

  stop() {
    sudo rc.d stop $1
  }
else
  start() {
    sudo systemctl start $1
  }

  restart() {
    sudo systemctl restart $1
  }

  stop() {
    sudo systemctl stop $1
  }

  enable() {
    sudo systemctl enable $1
  }

  status() {
    sudo systemctl status $1
  }

  disable() {
    sudo systemctl disable $1
  }
fi

function aa_mod_parameters ()
{
    N=/dev/null;
    C=`tput op` O=$(echo -en "\n`tput setaf 2`>>> `tput op`");
    for mod in $(cat /proc/modules|cut -d" " -f1);
    do
        md=/sys/module/$mod/parameters;
        [[ ! -d $md ]] && continue;
        m=$mod;
        d=`modinfo -d $m 2>$N | tr "\n" "\t"`;
        echo -en "$O$m$C";
        [[ ${#d} -gt 0 ]] && echo -n " - $d";
        echo;
        for mc in $(cd $md; echo *);
        do
            de=`modinfo -p $mod 2>$N | grep ^$mc 2>$N|sed "s/^$mc=//" 2>$N`;
            echo -en "\t$mc=`cat $md/$mc 2>$N`";
            [[ ${#de} -gt 1 ]] && echo -en " - $de";
            echo;
        done;
    done
}

function rm () {
  local path
  for path in "$@"; do
    # ignore any arguments
    if [[ "$path" = -* ]]; then :
    else
      local dst=${path##*/}
      # append the time if necessary
      while [ -e ~/.trash/"$dst" ]; do
        dst="$dst "$(/bin/date +%H-%M-%S)
      done
      /bin/mv "$path" ~/.trash/"$dst"
    fi
  done
}
