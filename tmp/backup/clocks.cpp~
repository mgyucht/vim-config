/*
ID: myucht1
PROG: clocks
LANG: C++
*/

#include <fstream>
#include <iostream>
#include <vector>
using namespace std;

int clocks[9], check[9];
vector<int> v;

bool check_clock()
{
  int cur[9], chk[9];
  for (size_t i = 0; i < 9; ++i)
  {
    cur[i] = clocks[i];
    chk[i] = check[i];
  }

  cur[0] = (cur[0] + 3 * chk[0] + 3 * chk[1] + 3 * chk[3]) % 12;
  cur[1] = (cur[1] + 3 * chk[0] + 3 * chk[1] + 3 * chk[2] * 3 * chk[4]) % 12;
  cur[2] = (cur[2] + 3 * chk[1] + 3 * chk[2] + 3 * chk[5]) % 12;
  cur[3] = (cur[3] + 3 * chk[0] + 3 * chk[3] + 3 * chk[4] + 3 * chk[6]) % 12;
  cur[4] = (cur[4] + 3 * chk[0] + 3 * chk[2] + 3 * chk[4] + 3 * chk[6]
      + 3 * chk[8]) % 12;
  cur[5] = (cur[5] + 3 * chk[2] + 3 * chk[4] + 3 * chk[5] + 3 * chk[8]) % 12;
  cur[6] = (cur[6] + 3 * chk[3] + 3 * chk[6] + 3 * chk[7]) % 12;
  cur[7] = (cur[7] + 3 * chk[4] + 3 * chk[6] + 3 * chk[7] + 3 * chk[8]) % 12;
  cur[8] = (cur[8] + 3 * chk[5] + 3 * chk[7] + 3 * chk[8]) % 12;

  for (size_t i = 0; i < 9; ++i)
  {
    if (cur[i] != 0)
      return false;
  }
  return true;
}

void save_ans()
{
    int a [9];
    for ( int i = 0; i < 9; i++ ) a [i] = check [i];

    vector <int> tmp;
    tmp.clear ();

    for ( int i = 0; i < 9; i++ ) {
        while ( a [i] ) {
            tmp.push_back (i + 1);
            a [i]--;
        }
    }

    if ( tmp.size () < v.size () ) v = tmp;
}


void saveans()
{
  int a[9];
  for (size_t i = 0; i < 9; ++i)
  {
    a[i] = check[i];
  }

  vector<int> tmp;
  tmp.clear();

  for (size_t i = 0; i < 9; ++i)
  {
    while (a[i] != 0)
    {
      tmp.push_back(i + 1);
      --a[i];
    }
  }

  if (tmp.size() < v.size()) v = tmp;
}

int main()
{
  // Initialization
  ifstream input("clocks.in");
  ofstream output("clocks.out");

  for (size_t i = 0; i < 100; ++i)
  {
    v.push_back(i);
  }

  for (size_t i = 0; i < 9; ++i)
  {
    input >> clocks[i];
  }

  // Solve the problem
  for (size_t a = 0; a < 4; ++a)
  {
    for (size_t b = 0; b < 4; ++b)
    {
      for (size_t c = 0; c < 4; ++c)
      {
        for (size_t d = 0; d < 4; ++d)
        {
          for (size_t e = 0; e < 4; ++e)
          {
            for (size_t f = 0; f < 4; ++f)
            {
              for (size_t g = 0; g < 4; ++g)
              {
                for (size_t h = 0; h < 4; ++h)
                {
                  for (size_t ii = 0; ii < 4; ++ii)
                  {
                    check[0] = a;
                    check[1] = b;
                    check[2] = c;
                    check[3] = d;
                    check[4] = e;
                    check[5] = f;
                    check[6] = g;
                    check[7] = h;
                    check[8] = ii;
                    if (check_clock())
                      save_ans();
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  // Output
  for (int i = 0; i < v.size(); ++i)
  {
    if (i) {output << " "; cout << " ";}
    output << v[i];
    cout << v[i];
  }
  output << endl;
  cout << endl;

  return 0;
}
